variables:
  - group: variables-haxe
  - name: AZURE_PIPELINES_REPO_URL
    value: $(Build.Repository.Uri)
  - name: AZURE_PIPELINES_BRANCH
    value: $(Build.SourceBranchName)

stages:
  - stage: StageTest
    jobs:
      - template: extra/azure-pipelines/build-windows.yml
        parameters:
          name: BuildWin64
          arch: '64'

      - template: extra/azure-pipelines/build-windows.yml
        parameters:
          name: BuildWin32
          arch: '32'

      - job: TestWin64
        dependsOn: BuildWin64
        pool:
          vmImage: 'windows-2019'
        variables:
          HAXELIB_ROOT: C:/haxelib
          HAXE_ARCH: 64
        strategy:
          matrix:
            macro:
              TEST: macro
            neko:
              TEST: neko
            hl:
              TEST: hl
            cpp:
              TEST: cpp
              HXCPP_COMPILE_CACHE: C:/hxcache
            java:
              TEST: java,jvm
            cs:
              TEST: cs
            js:
              TEST: js
            # https://github.com/microsoft/azure-pipelines-image-generation/issues/990
            # php:
            #   TEST: php
            # TODO. flash has never been enabled on our AppVeyor builds.
            # flash:
            #   TEST: flash9,as3
            python:
              TEST: python
            # TODO. Lua has never been enabled on our AppVeyor builds.
            # lua:
            #   TEST: lua
        steps:
          - checkout: self
            fetchDepth: 20
          - template: extra/azure-pipelines/install-neko-snapshot.yaml
            parameters:
              platform: windows
          - task: DownloadPipelineArtifact@0
            inputs:
              artifactName: 'win64Binaries'
              targetPath: win64Binaries
          - powershell: |
              Set-PSDebug -Trace 1
              7z x win64Binaries/*_bin.zip -owin64Binaries
              $dir = Get-ChildItem win64Binaries/* -Name -Directory
              Rename-Item win64Binaries/$dir haxe
              $dir = '' + ( get-location ) + '\win64Binaries\haxe'
              dir $dir
              Set-PSDebug -Trace 0
              Write-Host "##vso[task.prependpath]$dir"
            displayName: Setup Haxe
          - script: haxe -version
            displayName: Print Haxe version
          - task: UsePythonVersion@0
            inputs:
              versionSpec: '3.7'
          - powershell: |
              Set-PSDebug -Trace 1
              $pypath = python -c "import sys; print(sys.executable)"
              $py3path = $pypath.replace("python.exe","python3.exe")
              cmd /c mklink $py3path $pypath
              python3 -V
            displayName: "Make Python 3 be available as python3 in the cmdline"
          - script: |
              echo "$(PATH)"
              mkdir "$(HAXELIB_ROOT)"
              haxelib setup "$(HAXELIB_ROOT)"
            displayName: Setup haxelib
          - script: haxe RunCi.hxml
            workingDirectory: $(Build.SourcesDirectory)/tests
            displayName: Test