variables:
  - group: variables-haxe
  - name: AZURE_PIPELINES_REPO_URL
    value: $(Build.Repository.Uri)
  - name: AZURE_PIPELINES_BRANCH
    value: $(Build.SourceBranchName)

stages:
  - stage: StageTest
    jobs:
      - template: extra/azure-pipelines/build-linux.yml
        parameters:
          name: BuildLinux
      - job: TestLinux
        dependsOn: BuildLinux
        pool:
          vmImage: 'ubuntu-16.04'
        strategy:
          matrix:
            php:
              TEST: php
        steps:
          - template: extra/azure-pipelines/install-neko-snapshot.yaml
            parameters:
              platform: linux64
          - task: DownloadPipelineArtifact@0
            inputs:
              artifactName: 'linuxBinaries'
              targetPath: linuxBinaries
          - script: |
              set -ex
              tar -xf linuxBinaries/*_bin.tar.gz -C linuxBinaries --strip-components=1
              sudo mkdir -p /usr/local/bin/
              sudo mkdir -p /usr/local/share/haxe/
              sudo ln -s `pwd`/linuxBinaries/haxe /usr/local/bin/haxe
              sudo ln -s `pwd`/linuxBinaries/haxelib /usr/local/bin/haxelib
              sudo ln -s `pwd`/linuxBinaries/std /usr/local/share/haxe/std
            displayName: Setup Haxe
          - script: haxe -version
            displayName: Print Haxe version
          - script: |
              set -ex
              mkdir ~/haxelib
              haxelib setup ~/haxelib
            displayName: Setup haxelib
          - script: |
              set -ex
              sudo apt update -qqy
              sudo apt install -qqy $APT_PACKAGES
            condition: and(succeeded(), variables['APT_PACKAGES'])
            displayName: Install apt packages
          - script: haxe RunCi.hxml
            workingDirectory: $(Build.SourcesDirectory)/tests
            env:
              ${{ if variables['SAUCE_ACCESS_KEY'] }}:
                SAUCE_ACCESS_KEY: $(SAUCE_ACCESS_KEY)
            displayName: Test