variables:
  - group: variables-haxe
  - name: AZURE_PIPELINES_REPO_URL
    value: $(Build.Repository.Uri)
  - name: AZURE_PIPELINES_BRANCH
    value: $(Build.SourceBranchName)

trigger:
  branches:
    include:
      - '*'
  tags:
    include:
      - '*'

stages:
  - stage: StageTest
    jobs:
      - template: extra/azure-pipelines/build-mac.yml
        parameters:
          name: BuildMac

      - job: TestMac
        dependsOn: BuildMac
        pool:
          vmImage: 'macOS-10.13'
        strategy:
          matrix:
            macro:
              TEST: macro
            neko:
              TEST: neko
            hl:
              TEST: hl
              BREW_PACKAGES: ninja
            cpp:
              TEST: cpp
              HXCPP_COMPILE_CACHE: ~/hxcache
            java:
              TEST: java,jvm
            cs:
              TEST: cs
            js:
              TEST: js
            php:
              TEST: php
            flash:
              TEST: flash9
            python:
              TEST: python
            lua:
              TEST: lua
        steps:
          - checkout: self
            fetchDepth: 20
          - template: extra/azure-pipelines/install-neko-snapshot.yaml
            parameters:
              platform: mac
          - task: DownloadPipelineArtifact@0
            inputs:
              artifactName: 'macBinaries'
              targetPath: macBinaries
          - script: |
              set -ex
              tar -xf macBinaries/*_bin.tar.gz -C macBinaries --strip-components=1
              sudo mkdir -p /usr/local/bin/
              sudo mkdir -p /usr/local/share/haxe/
              sudo ln -s `pwd`/macBinaries/haxe /usr/local/bin/haxe
              sudo ln -s `pwd`/macBinaries/haxelib /usr/local/bin/haxelib
              sudo ln -s `pwd`/macBinaries/std /usr/local/share/haxe/std
            displayName: Setup Haxe
          - script: haxe -version
            displayName: Print Haxe version
          - script: |
              set -ex
              mkdir ~/haxelib
              haxelib setup ~/haxelib
            displayName: Setup haxelib
          - script: brew install $BREW_PACKAGES
            condition: and(succeeded(), variables['BREW_PACKAGES'])
            displayName: Install homebrew packages
          - script: haxe RunCi.hxml
            workingDirectory: $(Build.SourcesDirectory)/tests
            displayName: Test